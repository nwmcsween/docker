#!/bin/sh
set -e; [ -n "$TRACE" ] && set -x
[ -z "$GROUP_NAME" ] && export GROUP_NAME="_user"
[ -z "$USER_NAME" ] && export USER_NAME="_user"
[ -z "$USER_ID" ] && export USER_ID="10000"
[ -z "$GROUP_ID" ] && export GROUP_ID="10000"
[ "$USER_ID" -ne "$GROUP_ID" ] && export GROUP_NAME="_group"
export ROUTE="$(ip route | awk '/default/ { print $3 }')"

[ -z "$RETRIES" ] && RETRIES=3

pexit1() {
    printf "%s\n" "$1" 1>&2
    exit 1
}

pexit0() {
    printf "%s\n" "$1"
    exit 0
}

pret1() {
    printf "%s\n" "$1"
    return 1
}

pret0() {
    printf "%s\n" "$1"
    return 0
}

is_cmd() {
    command -v "$1" > /dev/null 2>&1 && return 0
    return 1
}

needed_cmd() {
    for c in "$@"; do
        printf "Checking for command %s in PATH... " "$c"
        if is_cmd "$c"; then
            pret0 "found."
        else
            pret1 "missing command!"
        fi
    done
}

needed_set() {
    for e in "$@"; do
        printf "Checking if %s is set... " "$e"
        if [ -n "$(eval "printf \"%s\" \"\$$e\"")" ]; then
            pret0 "set."
        else
            pret1 "unset!"
        fi
    done
}

for i in /etc/entrypoint.d/*.sh; do
    [ ! -f "$i" ] && continue
    re=$RETRIES
    ret=1
    printf "Running %s...\n" "$i"
    while [ $((re = re - 1)) -ge 0 ] && [ $ret -ne 0 ]; do
        ( trap - INT QUIT TSTP; . "$i" ) | sed 's:^:\t:g' && echo "done" || pret1 "failed to run $i retrying..."
        ret=$?
    done
    [ ! $? ] && pexit1 "failed to run $i"
done

printf "Executing main command...\n"
su-exec $USER_ID:$GROUP_ID "$@"
